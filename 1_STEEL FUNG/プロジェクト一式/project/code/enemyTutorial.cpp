//*****************************************************
//
// 通常敵の処理[enemyTutorial.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "enemyTutorial.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{

}

//=====================================================
// コンストラクタ
//=====================================================
CEnemyTutorial::CEnemyTutorial()
{
	m_fTimeFire = 0;
}

//=====================================================
// デストラクタ
//=====================================================
CEnemyTutorial::~CEnemyTutorial()
{

}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CEnemyTutorial::Init(void)
{
	// 継承クラスの初期化
	CEnemy::Init();

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CEnemyTutorial::Uninit(void)
{
	// 継承クラスの終了
	CEnemy::Uninit();
}

//=====================================================
// 更新処理
//=====================================================
void CEnemyTutorial::Update(void)
{
	// 継承クラスの更新
	CEnemy::Update();
}

//=====================================================
// 待機
//=====================================================
void CEnemyTutorial::Wait(void)
{

}

//=====================================================
// 目標の追跡
//=====================================================
void CEnemyTutorial::Chase(void)
{

}

//=====================================================
// 攻撃
//=====================================================
void CEnemyTutorial::Attack(void)
{

}

//=====================================================
// 地面にぶつかったときの処理
//=====================================================
void CEnemyTutorial::HitField(void)
{
	CEnemy::STATE state = GetState();

	if (state == CEnemy::STATE::STATE_THROWN)
	{
		// 死亡
		Hit(20.0f);

		// 移動量を減衰
		D3DXVECTOR3 move = GetMove();

		move *= 0.1f;

		SetMove(move);
	}

	CEnemy::HitField();
}

//=====================================================
// 描画処理
//=====================================================
void CEnemyTutorial::Draw(void)
{
	// 継承クラスの描画
	CEnemy::Draw();
}