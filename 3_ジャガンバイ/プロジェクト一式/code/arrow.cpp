//*****************************************************
//
// 影の処理[shadow.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "arrow.h"
#include "manager.h"
#include "renderer.h"
#include "texture.h"
#include "game.h"
#include "debugproc.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
const char* TEX_PATH = "data\\TEXTURE\\UI\\arrow.png";	// テクスチャのパス
}

//=====================================================
// コンストラクタ
//=====================================================
CArrow::CArrow(int nPriority) : CObject3D(nPriority)
{

}

//=====================================================
// デストラクタ
//=====================================================
CArrow::~CArrow()
{

}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CArrow::Init(void)
{
	// 継承クラスの初期化
	CObject3D::Init();

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CArrow::Uninit(void)
{
	// 継承クラスの終了
	CObject3D::Uninit();
}

//=====================================================
// 更新処理
//=====================================================
void CArrow::Update(void)
{
	// 継承クラスの更新
	CObject3D::Update();
}

//=====================================================
// 描画処理
//=====================================================
void CArrow::Draw(void)
{
	// 継承クラスの描画
	CObject3D::Draw();
}

//=====================================================
// 生成処理
//=====================================================
CArrow *CArrow::Create(D3DXVECTOR3 pos, float width, float height)
{
	CArrow *pShadow = nullptr;

	if (pShadow == nullptr)
	{
		pShadow = new CArrow;

		if (pShadow != nullptr)
		{
			// 初期化
			pShadow->Init();

			pShadow->SetPosition(pos);
			pShadow->SetSize(width, height);

			// テクスチャの読込
			int nIdx = CTexture::GetInstance()->Regist(TEX_PATH);
			pShadow->SetIdxTexture(nIdx);

			pShadow->SetVtx();
		}
	}

	return pShadow;
}